import requests
from bs4 import BeautifulSoup
import json
from datetime import datetime

def scrape_chistdom():
    print("‚è≥ –ò–∑–≤–ª–∏—á–∞–Ω–µ –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç–∏ –æ—Ç Chistdom...")
    url = "https://chistdom.com/bg?category=103"
    headers = {'User-Agent': 'Mozilla/5.0'}
    
    try:
        response = requests.get(url, headers=headers)
        soup = BeautifulSoup(response.text, 'html.parser')
        products = []
        
        # –ê–¥–∞–ø—Ç–∏—Ä–∞–π—Ç–µ —Ç–µ–∑–∏ —Å–µ–ª–µ–∫—Ç–æ—Ä–∏ —Å–ø–æ—Ä–µ–¥ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–Ω–∞—Ç–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –Ω–∞ Chistdom
        for item in soup.select('.product-item'):
            product = {
                'name': item.select_one('.product-title').get_text(strip=True) if item.select_one('.product-title') else '–ü—Ä–æ–¥—É–∫—Ç –±–µ–∑ –∏–º–µ',
                'price': item.select_one('.price').get_text(strip=True) if item.select_one('.price') else '–¶–µ–Ω–∞ –ø–æ –∑–∞–ø–∏—Ç–≤–∞–Ω–µ',
                'image': item.select_one('img')['src'] if item.select_one('img') else '',
                'description': item.select_one('.product-description').get_text(strip=True) if item.select_one('.product-description') else ''
            }
            products.append(product)
        
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –∏–∑–≤–ª–µ—á–µ–Ω–∏ {len(products)} –ø—Ä–æ–¥—É–∫—Ç–∞")
        return products
    
    except Exception as e:
        print(f"‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–∏—á–∞–Ω–µ: {e}")
        return []

def generate_html(products):
    print("üõ† –ì–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –Ω–∞ HTML...")
    html = f"""<!DOCTYPE html>
<html lang="bg">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Seyta EOOD - –ú–∞–≥–∞–∑–∏–Ω</title>
    <style>
        body {{ font-family: Arial, sans-serif; margin: 0; padding: 20px; }}
        .header {{ text-align: center; margin-bottom: 30px; }}
        .products {{ display: grid; grid-template-columns: repeat(auto-fill, minmax(280px, 1fr)); gap: 20px; }}
        .product {{ border: 1px solid #e1e1e1; border-radius: 8px; padding: 15px; transition: transform 0.3s; }}
        .product:hover {{ transform: translateY(-5px); box-shadow: 0 5px 15px rgba(0,0,0,0.1); }}
        .product img {{ max-width: 100%; height: auto; border-radius: 5px; }}
        .product h3 {{ margin: 10px 0; color: #2c3e50; }}
        .product .price {{ font-weight: bold; color: #e74c3c; font-size: 1.1em; }}
        .product .description {{ color: #7f8c8d; font-size: 0.9em; }}
        .footer {{ text-align: center; margin-top: 40px; color: #95a5a6; font-size: 0.8em; }}
    </style>
</head>
<body>
    <div class="header">
        <h1>Seyta EOOD - –ú–∞–≥–∞–∑–∏–Ω</h1>
        <p>–ê–∫—Ç—É–∞–ª–∏–∑–∏—Ä–∞–Ω–æ –Ω–∞ {datetime.now().strftime("%d.%m.%Y %H:%M")}</p>
    </div>
    
    <div class="products">
        {''.join([f"""
        <div class="product">
            <img src="{p['image']}" alt="{p['name']}">
            <h3>{p['name']}</h3>
            <div class="price">{p['price']}</div>
            <p class="description">{p['description']}</p>
        </div>
        """ for p in products])}
    </div>
    
    <div class="footer">
        ¬© {datetime.now().year} Seyta EOOD. –í—Å–∏—á–∫–∏ –ø—Ä–∞–≤–∞ –∑–∞–ø–∞–∑–µ–Ω–∏.
    </div>
</body>
</html>"""
    
    with open("index.html", "w", encoding="utf-8") as f:
        f.write(html)
    print("‚úÖ HTML —Ñ–∞–π–ª—ä—Ç –µ –≥–µ–Ω–µ—Ä–∏—Ä–∞–Ω!")

if __name__ == "__main__":
    products = scrape_chistdom()
    if products:
        generate_html(products)